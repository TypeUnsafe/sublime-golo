{ "name": "Golo",
  "scopeName": "source.golo",
  "fileTypes": ["golo"],
  "patterns": [

        { 
            "match": "(#).*$\n?",
            "name": "comment.line.number-sign.golo",
            "comment": "comment with #"
        },

        { 
            "begin": "\"\"\"", 
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.golo"
                }
            }, 
            "end": "\"\"\"", 
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.golo"
                }
            }, 
            "name": "string.quoted.third.golo", 
            "patterns": [
                {
                    "match": "(\\$\\w+|\\$\\{[^\\}]+\\})",
                    "name": "variable.parameter.template.golo"
                },
                {
                    "match": "\\\\.", 
                    "name": "constant.character.escape.golo"
                }
            ]
        },
                
        {
            "begin": "\"", 
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.golo"
                }
            }, 
            "end": "\"", 
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.golo"
                }
            }, 
            "name": "string.quoted.double.golo", 
            "patterns": [
                {
                    "match": "(\\$\\w+|\\$\\{[^\\}]+\\})",
                    "name": "variable.parameter.template.golo"
                },
                {
                    "match": "\\\\.", 
                    "name": "constant.character.escape.golo"
                }
            ]
        }, 
        {
            "begin": "'", 
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.golo"
                }
            }, 
            "end": "'", 
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.golo"
                }
            }, 
            "name": "string.quoted.single.golo", 
            "patterns": [
                {
                    "match": "\\\\.", 
                    "name": "constant.character.escape.golo"
                }
            ]
        },
        {
            "begin": "`", 
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.golo"
                }
            }, 
            "end": "`", 
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.golo"
                }
            }, 
            "name": "string.quoted.single.golo"
        },

        {
            "match": "\\b(true|false|null|super)\\b", 
            "name": "constant.language.golo"
        }, 
        {
            "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\\b", 
            "name": "constant.numeric.golo"
        },
        {
            "match": "\\b([A-Z][A-Z0-9_]+)\\b",
            "name": "constant.other.golo"
        },


        {
            "match": "\\b(var|let|val|local)\\b",
            "name": "storage.modifier.golo"
        },
        {
            "match": "\\b(try|catch|finally|throw)\\b", 
            "name": "keyword.control.catch-exception.golo"
        },
        {
            "match": "\\b(if|then|else|while|for|foreach|do|return|when|otherwise|where|break|continue)\\b", 
            "name": "keyword.control.golo"
        },
                {
            "match": "\\b(println|function|pimp|class|module|import)\\b", 
            "name": "keyword.other.golo"
        },
        {
            "match": "\\b(in|is|as|assert)\\b", 
            "name": "keyword.operator.golo"
        },
        {
            "match": "(==|!=|<=|>=|<>|<|>)", 
            "name": "keyword.operator.comparison.golo"
        }, 
        {
            "match": "(=)", 
            "name": "keyword.operator.assignment.golo"
        },
        {
            "match": "(:)", 
            "name": "keyword.operator.declaration.golo"
        },
        {
            "match": "(\\.)", 
            "name": "keyword.operator.dot.golo"
        }, 
        {
            "match": "(\\-\\-|\\+\\+)", 
            "name": "keyword.operator.increment-decrement.golo"
        }, 
        {
            "match": "(\\-|\\+|\\*|\\/|%)", 
            "name": "keyword.operator.arithmetic.golo"
        }, 
        {
            "match": "(!|&&|\\|\\|)", 
            "name": "keyword.operator.logical.golo"
        },
        {
            "match": "(;)", 
            "name": "punctuation.terminator.golo"
        },

        {
            "match": "\\b(range)\\b", 
            "name": "storage.type.buildin.kotlin"
        },
        {
            "match": "\\b(Array|alength|aget|aset)\\b", 
            "name": "storage.type.buildin.array.kotlin"
        }
  ],

  "uuid": "1cc2b523-9678-42fe-80ae-2604ff57e138"
}